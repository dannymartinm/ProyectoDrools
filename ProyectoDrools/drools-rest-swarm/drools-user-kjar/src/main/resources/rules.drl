package org.drools.workshop;
import org.drools.workshop.model.*;

rule "Cargar Datos"
    when
    then
        System.out.println("RULE");
        insert(new Asignatura("Mate I", "ITC","Español", "MA1015"));
        insert(new Asignatura("Mate II", "ITC","Español", "MA1017"));
        insert(new Asignatura("Física I", "ITC","Español", "F1002"));
        insert(new Asignatura("Electricidad y Magnetismo", "ITC","Español", "F1005"));
        insert(new Asignatura("Diseño Interactivo", "ITC","Español", "TC1015"));
        insert(new Asignatura("Fundamentos Progra", "ITC","Español", "TC1014"));
        insert(new Asignatura("POO", "ITC","Español", "TC2016"));
        insert(new Asignatura("Estructura de Datos", "ITC","Español", "TC1018"));
        insert(new Asignatura("Bases de Datos I", "ITC","Español", "TC1020"));
        insert(new Asignatura("Bases de Datos II", "ITC","Español", "TC3041"));
end 

rule "Recomendacion por promedio mayor o igual a 85"
    when
        $a: Alumno()
        $as: Asignatura()
        $aa: AlumnoAsignatura(promedio >= 85, matricula == $a.matricula, clave == $as.clave )
        $ej2: Ejercicio(dificultad==5)
    then

        insert(new Recomendacion($ej2.getNombre(), $aa.getClave(), $ej2.getDificultad(),"Promedio>=85 en "+$as.getNombre()));
end

rule "Recomendacion por promedio menor a 85"
    when
        $a: Alumno()
        $as: Asignatura()
        $aa: AlumnoAsignatura(promedio < 85, matricula == $a.matricula, clave == $as.clave )
        $ej2: Ejercicio(dificultad <= 4)
    then
        insert(new Recomendacion($ej2.getNombre(), $as.getClave(), $ej2.getDificultad(), "Promedio<85 en"+$as.getNombre()));
end

rule "Recomendacion por estado y calif menor que 70"
    when
        $a : Alumno()
        $as: Asignatura()
        $aa: AlumnoAsignatura(promedio < 70, matricula == $a.matricula, clave == $as.clave)
        $ej : Ejercicio(estado == 2)
        $ae: AlumnoEjercicio (matricula == $a.matricula && id_ejercicio == $ej.id_ejercicio)
        $ej2: Ejercicio(id_ejercicio != $ae.id_ejercicio, tema == $ej.tema && dificultad <= $ej.dificultad)
    then
        insert(new Recomendacion($ej2.getNombre(), $aa.getClave(), $ej2.getDificultad(), "Estado completado y calif<70 en"+$as.getNombre()));
end

rule "Recomendacion por estado y calif mayor 85" 
    when
        $a : Alumno()
        $as: Asignatura()
        $aa: AlumnoAsignatura(promedio > 85, matricula == $a.matricula, clave == $as.clave)
        $ej : Ejercicio(estado == 2)
        $ae: AlumnoEjercicio (matricula == $a.matricula && id_ejercicio == $ej.id_ejercicio)
        $ej2: Ejercicio(id_ejercicio != $ae.id_ejercicio, tema == $ej.tema && dificultad >= $ej.dificultad)
    then
        insert(new Recomendacion($ej2.getNombre(), $aa.getClave(), $ej2.getDificultad(), "Estado completado calif>85 en"+$as.getNombre()));
        
end

rule "Recomendacion por estado y calif menor igual 85 y mayor o igual que 70"
    when
        $a : Alumno()
        $as: Asignatura()        
        $aa: AlumnoAsignatura(promedio >= 70 && promedio <= 85, matricula == $a.matricula, clave == $as.clave)
        $ej : Ejercicio(estado == 2)        
        $ae: AlumnoEjercicio (matricula == $a.matricula && id_ejercicio == $ej.id_ejercicio)
        $ej2: Ejercicio(id_ejercicio != $ae.id_ejercicio, tema == $ej.tema && dificultad == $ej.dificultad)
    then
        insert(new Recomendacion($ej2.getNombre(), $aa.getClave(), $ej2.getDificultad(), "Estado completado y 70=<calif<=85 en"+$as.getNombre()));
end

rule " Recomendacion predecesor" 
    when
        $a : Alumno()
        $as : Asignatura()//predecesora
        $as2 : Asignatura() //actual
        $alas : AlumnoAsignatura(clave == $as2.clave && $a.matricula == matricula) 
        $ej : Ejercicio()
        $ase : AsignaturaEjercicio(id_ejercicio == $ej.id_ejercicio && clave == $alas.clave && predecesor == $as.clave, $alas.promedio <= 70)
        $ej2 : Ejercicio(id_ejercicio != $ase.id_ejercicio && dificultad >= 1)
        
    then
        insert(new Recomendacion($ej2.getNombre(), $as.getNombre(), $ej2.getDificultad(), "Predecesor:"+$as.getNombre()+ "de "+$as2.getNombre()));
end

